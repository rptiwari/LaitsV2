package laits.gui.dialog;

import laits.data.Task;
import laits.model.Graph;
import laits.model.Vertex;

import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;
import javax.swing.JPanel;
import laits.plot.PlotPanel;
import org.apache.log4j.Logger;

public class PlotDialog extends javax.swing.JDialog implements WindowListener {

  public PlotDialog(boolean modal, Vertex node, Graph g, Task t) {

    logs.trace("Initializing Plot Dialog");

    initComponents();
    this.node = node;
    this.graph = g;
    this.setTitle(this.node.getNodeName() + " Graph");
    this.setAlwaysOnTop(false);
    this.pack();

    if (grafica != null) {
      graphPanel.remove(grafica);
    }

    logs.trace("Attaching PlotPanel to PlotDialog");
    grafica = new PlotPanel (this.node, graph);
    graphPanel.add(grafica);
    Panel.add(graphPanel);
    graph.getPlots().add(this);

    this.add(Panel);
    this.setVisible(true);
    this.addWindowListener(this);
  }



  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
   @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Panel = new javax.swing.JPanel();
        graphPanel = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        graphPanel.setMinimumSize(new java.awt.Dimension(450, 216));
        graphPanel.setPreferredSize(new java.awt.Dimension(450, 216));
        graphPanel.setRequestFocusEnabled(false);
        graphPanel.setLayout(new java.awt.GridLayout(1, 0));

        javax.swing.GroupLayout PanelLayout = new javax.swing.GroupLayout(Panel);
        Panel.setLayout(PanelLayout);
        PanelLayout.setHorizontalGroup(
            PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(graphPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 480, Short.MAX_VALUE)
        );
        PanelLayout.setVerticalGroup(
            PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(graphPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 263, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Panel;
    private javax.swing.JPanel graphPanel;
    // End of variables declaration//GEN-END:variables

    public void windowOpened(WindowEvent e){}

    public void windowClosing(WindowEvent e){}

    public void windowClosed(WindowEvent e)
    {
      graph.getPlots().remove(this);
    }

    public void windowIconified(WindowEvent e){}

    public void windowDeiconified(WindowEvent e){}

    public void windowActivated(WindowEvent e){}

    public void windowDeactivated(WindowEvent e){}


    JPanel grafica;
    Vertex node;
    Graph graph;

    //the width and height of the panel
    int width, height;

    private static Logger logs = Logger.getLogger(PlotDialog.class);
}
